insert_full_user=select * from insert_full_user(_login := :login, _email := :email, \
                 _password := :password, _first_name := :first_name, _last_name := :last_name, \
                 _about := :about, _roles := :roles, _language_ids := :language_ids);
upgrade_to_speaker=select * from upgrade_user_to_speaker(_id := :id, _login := :login, _email := :email, \
                   _first_name := :first_name, _last_name := :last_name, _about := :about, \
                   _language_ids := :language_ids);
find_all_users=select id, login, email, password, first_name, last_name, active, about, rate, num_rates \
              from users \
              where active=TRUE
find_users=select id, login, email, password, first_name, last_name, active, about, rate, num_rates \
              from users \
              order by id asc
find_users_with_complaints_count = SELECT u.id, u.login, u.email, u.first_name, u.last_name, u.active, (SELECT COUNT (*) \
                                                                                                        FROM complaints \
                                                                                                        WHERE id_destination = u.id) complaints_count \
                                    FROM users u \
                                    WHERE u.login <> 'admin' \
                                    ORDER BY complaints_count DESC \
                                    OFFSET :offset \
                                    LIMIT :limit;
find_complaints_for_user = SELECT * \
                           FROM complaints \
                           WHERE id_destination = :user_id;
find_users_count = SELECT COUNT (*) \
                   FROM users;
find_user_with_email=select id, login, email, password, first_name, last_name, active, about, rate, num_rates \
                     from users \
                     where email=:email
find_user_with_id=select id, login, email, password, first_name, last_name, active, about, rate, num_rates \
                     from users \
                     where id=:id_param
find_user_with_login=select id, login, email, password, first_name, last_name, active, about, rate, num_rates \
                     from users \
                     where login=:login_param
update_user=update users \
            set login = :login, email = :email, password = :password, first_name = :first_name, \
            last_name = :last_name, active = :active, about = :about, rate = :rate, \
            num_rates = :num_rates \
            where id = :id
add_role_to_user=INSERT INTO users_roles (id_user, id_role) VALUES (:usId, :roleId)
find_user_roles=select name  \
                from  roles inner join users_roles on users_roles.id_role=roles.id inner join  users on users.id=id_user \
                where users.login=:login
find_role_id=select id from roles \
             where name =  :text
find_all_speakers=select id, login, email, password, first_name, last_name, active, about, rate, num_rates \
                  from users \
                  where 'SPEAKER' in (select name  from  roles inner join users_roles on users_roles.id_role=roles.id where users.id=id_user) \
                  AND active=TRUE
find_subscriptions_by_user_id=select speakers.id, speakers.login,  speakers.email,  \
                              speakers.password,  speakers.first_name,  speakers.last_name,  \
                              speakers.active,  speakers.about,  speakers.rate, speakers.num_rates \
                              from  users as speakers inner join subscriptions on speakers.id=subscriptions.id_speaker inner join  users on users.id=id_user \
                              where users.id = :user_id_param AND speakers.active=TRUE
find_languages_by_user_id=select languages.id, languages.name \
                              from  users inner join users_languages on users.id=users_languages.id_user inner join  languages on languages.id=id_language \
                              where users.id=:user_id_param
deactivate_by_user_id=update users \
                      set active=FALSE \
                      where users.id=:user_id_param
activate_by_user_id=update users \
                    set active=TRUE \
                    where users.id=:user_id_param
get_all_complaints_not_read=select id, reason, time_posted, id_source, id_destination, read from complaints \
                             where read=FALSE
mark_as_read=update complaints \
             set read=TRUE \
             where id=:id
post_complaint=insert into complaints (reason, time_posted, id_source, id_destination) values (:reason, :time_posted, :id_source, :id_destination)
subscribe_to_speaker=insert into subscriptions (id_speaker, id_user) values (:id_speak, :id_user)
unsubscribe_from_speaker=delete from subscriptions where id_speaker=:id_speak AND id_user=:id_user
find_subscribers_of_speaker_by_his_id=select id, login, email, password, first_name, last_name, active, about, rate, num_rates \
                                      from users inner join subscriptions on users.id=subscriptions.id_user \
                                      where active=TRUE and subscriptions.id_speaker=:speaker_id_param
simple_subscribers_of_speaker_by_his_id=select id, login, first_name, last_name, rate, num_rates \
                                        from users inner join subscriptions on users.id=subscriptions.id_user \
                                        where active=TRUE and subscriptions.id_speaker=:speaker_id_param
change_password=update users \
                set password = :password \
                where id = :id
update_user_rate=update users \
                set rate = :rate, num_rates = :num_rates \
                where id = :id
update_user_profile=update users \
                set first_name = :first_name, last_name = :last_name, about = :about \
                where id = :id
remove_user_languages=delete from users_languages \
                      where id_user = :id_user
insert_user_language=insert into users_languages (id_user, id_language) \
                      values (:id_user, :id_language) 

